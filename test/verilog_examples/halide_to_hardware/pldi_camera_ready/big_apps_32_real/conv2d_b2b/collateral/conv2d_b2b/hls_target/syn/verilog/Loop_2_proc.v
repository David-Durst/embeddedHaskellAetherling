// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_2_proc (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_ready,
        ap_done,
        ap_continue,
        ap_idle,
        start_out,
        start_write,
        p_mul_stencil_stream_V_value_V_dout,
        p_mul_stencil_stream_V_value_V_empty_n,
        p_mul_stencil_stream_V_value_V_read,
        p_p2_mul1_stencil_stream_V_value_V_din,
        p_p2_mul1_stencil_stream_V_value_V_full_n,
        p_p2_mul1_stencil_stream_V_value_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state30 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_ready;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   start_out;
output   start_write;
input  [127:0] p_mul_stencil_stream_V_value_V_dout;
input   p_mul_stencil_stream_V_value_V_empty_n;
output   p_mul_stencil_stream_V_value_V_read;
output  [31:0] p_p2_mul1_stencil_stream_V_value_V_din;
input   p_p2_mul1_stencil_stream_V_value_V_full_n;
output   p_p2_mul1_stencil_stream_V_value_V_write;

reg ap_done;
reg ap_idle;
reg p_mul_stencil_stream_V_value_V_read;
reg p_p2_mul1_stencil_stream_V_value_V_write;

reg    real_start;
reg    real_start_status_reg;
reg    internal_ap_ready;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    start_once_reg;
reg    start_control_reg;
reg    p_mul_stencil_stream_V_value_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_flag00000000;
reg   [0:0] exitcond_flatten_reg_808;
reg    p_p2_mul1_stencil_stream_V_value_V_blk_n;
reg    ap_enable_reg_pp0_iter27;
reg   [0:0] ap_reg_pp0_iter26_exitcond_flatten_reg_808;
reg   [20:0] indvar_flatten_reg_115;
wire   [0:0] exitcond_flatten_fu_170_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
reg    ap_block_state29_pp0_stage0_iter27;
reg    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter6_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter7_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter8_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter9_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter10_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter11_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter12_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter13_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter14_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter15_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter16_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter17_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter18_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter19_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter20_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter21_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter22_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter23_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter24_exitcond_flatten_reg_808;
reg   [0:0] ap_reg_pp0_iter25_exitcond_flatten_reg_808;
wire   [20:0] indvar_flatten_next_fu_176_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] p_381_fu_182_p1;
reg   [31:0] p_381_reg_817;
reg   [31:0] p_mul_stencil_value_0_reg_822;
reg   [31:0] p_mul_stencil_value_0_1_reg_827;
reg   [31:0] p_mul_stencil_value_0_2_reg_832;
wire   [31:0] grp_fu_126_p1;
reg   [31:0] p_382_reg_837;
wire   [31:0] grp_fu_129_p1;
reg   [31:0] p_391_reg_842;
wire   [31:0] grp_fu_132_p1;
reg   [31:0] p_400_reg_847;
wire   [31:0] grp_fu_135_p1;
reg   [31:0] p_409_reg_852;
wire   [63:0] grp_fu_138_p1;
reg   [63:0] p_383_reg_857;
wire   [63:0] grp_fu_141_p1;
reg   [63:0] p_392_reg_862;
wire   [63:0] grp_fu_144_p1;
reg   [63:0] p_401_reg_867;
wire   [63:0] grp_fu_147_p1;
reg   [63:0] p_410_reg_872;
wire   [63:0] grp_fu_150_p2;
reg   [63:0] p_384_reg_877;
wire   [63:0] grp_fu_155_p2;
reg   [63:0] p_393_reg_882;
wire   [63:0] grp_fu_160_p2;
reg   [63:0] p_402_reg_887;
wire   [63:0] grp_fu_165_p2;
reg   [63:0] p_411_reg_892;
reg   [0:0] p_Result_s_reg_897;
reg   [0:0] ap_reg_pp0_iter23_p_Result_s_reg_897;
reg   [0:0] ap_reg_pp0_iter24_p_Result_s_reg_897;
wire   [51:0] loc_V_2_fu_237_p1;
reg   [51:0] loc_V_2_reg_902;
wire   [0:0] isNeg_fu_251_p3;
reg   [0:0] isNeg_reg_907;
wire   [11:0] sh_assign_2_fu_269_p3;
reg   [11:0] sh_assign_2_reg_912;
reg   [0:0] p_Result_4_reg_917;
reg   [0:0] ap_reg_pp0_iter23_p_Result_4_reg_917;
wire   [51:0] loc_V_4_fu_298_p1;
reg   [51:0] loc_V_4_reg_922;
wire   [0:0] isNeg_1_fu_312_p3;
reg   [0:0] isNeg_1_reg_927;
wire   [11:0] sh_assign_4_fu_330_p3;
reg   [11:0] sh_assign_4_reg_932;
wire   [63:0] p_Val2_17_fu_338_p1;
reg   [63:0] p_Val2_17_reg_937;
reg   [63:0] ap_reg_pp0_iter23_p_Val2_17_reg_937;
reg   [63:0] ap_reg_pp0_iter24_p_Val2_17_reg_937;
wire   [51:0] loc_V_6_fu_351_p1;
reg   [51:0] loc_V_6_reg_942;
wire   [0:0] isNeg_2_fu_365_p3;
reg   [0:0] isNeg_2_reg_947;
wire   [11:0] sh_assign_6_fu_383_p3;
reg   [11:0] sh_assign_6_reg_952;
wire   [63:0] p_Val2_21_fu_391_p1;
reg   [63:0] p_Val2_21_reg_957;
reg   [63:0] ap_reg_pp0_iter23_p_Val2_21_reg_957;
reg   [63:0] ap_reg_pp0_iter24_p_Val2_21_reg_957;
wire   [51:0] loc_V_8_fu_404_p1;
reg   [51:0] loc_V_8_reg_962;
wire   [0:0] isNeg_3_fu_418_p3;
reg   [0:0] isNeg_3_reg_967;
wire   [11:0] sh_assign_8_fu_436_p3;
reg   [11:0] sh_assign_8_reg_972;
wire   [30:0] p_Val2_7_fu_502_p3;
reg   [30:0] p_Val2_7_reg_977;
wire   [29:0] tmp_27_fu_574_p1;
reg   [29:0] tmp_27_reg_982;
wire   [29:0] tmp_28_fu_578_p1;
reg   [29:0] tmp_28_reg_987;
wire   [30:0] p_Val2_19_fu_640_p3;
reg   [30:0] p_Val2_19_reg_992;
reg   [30:0] ap_reg_pp0_iter24_p_Val2_19_reg_992;
wire   [30:0] p_Val2_23_fu_705_p3;
reg   [30:0] p_Val2_23_reg_998;
wire   [31:0] tmp_13_i_i_fu_712_p1;
reg   [31:0] tmp_13_i_i_reg_1003;
wire   [31:0] tmp_16_i_i_fu_715_p2;
reg   [31:0] tmp_16_i_i_reg_1008;
wire   [29:0] tmp_3_fu_726_p3;
reg   [29:0] tmp_3_reg_1013;
reg   [29:0] ap_reg_pp0_iter25_tmp_3_reg_1013;
wire   [30:0] tmp_16_i_i2_fu_732_p2;
reg   [30:0] tmp_16_i_i2_reg_1018;
wire   [31:0] tmp_13_i_i3_fu_737_p1;
reg   [31:0] tmp_13_i_i3_reg_1023;
wire   [31:0] tmp_16_i_i3_fu_740_p2;
reg   [31:0] tmp_16_i_i3_reg_1028;
wire   [31:0] p_Val2_26_fu_746_p3;
reg   [31:0] p_Val2_26_reg_1033;
wire   [31:0] tmp5_fu_785_p2;
reg   [31:0] tmp5_reg_1038;
wire   [31:0] p_415_fu_803_p2;
reg   [31:0] p_415_reg_1043;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_block_pp0_stage0_flag00001001;
wire   [63:0] p_Val2_5_fu_216_p1;
wire   [10:0] loc_V_fu_227_p4;
wire   [11:0] tmp_i_i_cast_i_fu_241_p1;
wire   [11:0] sh_assign_fu_245_p2;
wire   [10:0] tmp_8_i_i_fu_259_p2;
wire  signed [11:0] tmp_8_i_cast_i_fu_265_p1;
wire   [63:0] p_Val2_s_fu_277_p1;
wire   [10:0] loc_V_3_fu_288_p4;
wire   [11:0] tmp_i_i_cast_i9_fu_302_p1;
wire   [11:0] sh_assign_3_fu_306_p2;
wire   [10:0] tmp_8_i_i1_fu_320_p2;
wire  signed [11:0] tmp_8_i_cast_i1_fu_326_p1;
wire   [10:0] loc_V_5_fu_341_p4;
wire   [11:0] tmp_i_i_cast_i1_fu_355_p1;
wire   [11:0] sh_assign_5_fu_359_p2;
wire   [10:0] tmp_8_i_i2_fu_373_p2;
wire  signed [11:0] tmp_8_i_cast_i2_fu_379_p1;
wire   [10:0] loc_V_7_fu_394_p4;
wire   [11:0] tmp_i_i_cast_i2_fu_408_p1;
wire   [11:0] sh_assign_7_fu_412_p2;
wire   [10:0] tmp_8_i_i3_fu_426_p2;
wire  signed [11:0] tmp_8_i_cast_i3_fu_432_p1;
wire   [53:0] tmp_i_i_fu_444_p4;
wire  signed [31:0] sh_assign_2_i_cast_i_fu_457_p1;
wire   [53:0] tmp_9_i_cast_i_fu_464_p1;
wire   [136:0] tmp_i_cast_i_fu_453_p1;
wire   [136:0] tmp_9_i_i_fu_460_p1;
wire   [53:0] tmp_10_i_i_fu_468_p2;
wire   [0:0] tmp_17_fu_480_p3;
wire   [136:0] tmp_11_i_i_fu_474_p2;
wire   [30:0] tmp_7_fu_488_p1;
wire   [30:0] tmp_8_fu_492_p4;
wire   [53:0] tmp_i_i7_fu_509_p4;
wire  signed [31:0] sh_assign_2_i_cast_i_1_fu_522_p1;
wire   [53:0] tmp_9_i_cast_i1_fu_529_p1;
wire   [136:0] tmp_i_cast_i8_fu_518_p1;
wire   [136:0] tmp_9_i_i1_fu_525_p1;
wire   [53:0] tmp_10_i_i1_fu_533_p2;
wire   [0:0] tmp_26_fu_545_p3;
wire   [136:0] tmp_11_i_i1_fu_539_p2;
wire   [30:0] tmp_s_fu_553_p1;
wire   [30:0] tmp_2_fu_557_p4;
wire   [30:0] p_Val2_15_fu_567_p3;
wire   [53:0] tmp_i_i1_fu_582_p4;
wire  signed [31:0] sh_assign_2_i_cast_i_2_fu_595_p1;
wire   [53:0] tmp_9_i_cast_i2_fu_602_p1;
wire   [136:0] tmp_i_cast_i1_fu_591_p1;
wire   [136:0] tmp_9_i_i2_fu_598_p1;
wire   [53:0] tmp_10_i_i2_fu_606_p2;
wire   [0:0] tmp_32_fu_618_p3;
wire   [136:0] tmp_11_i_i2_fu_612_p2;
wire   [30:0] tmp_4_fu_626_p1;
wire   [30:0] tmp_5_fu_630_p4;
wire   [53:0] tmp_i_i2_fu_647_p4;
wire  signed [31:0] sh_assign_2_i_cast_i_3_fu_660_p1;
wire   [53:0] tmp_9_i_cast_i3_fu_667_p1;
wire   [136:0] tmp_i_cast_i2_fu_656_p1;
wire   [136:0] tmp_9_i_i3_fu_663_p1;
wire   [53:0] tmp_10_i_i3_fu_671_p2;
wire   [0:0] tmp_36_fu_683_p3;
wire   [136:0] tmp_11_i_i3_fu_677_p2;
wire   [30:0] tmp_9_fu_691_p1;
wire   [30:0] tmp_10_fu_695_p4;
wire   [29:0] tmp_16_i_i1_fu_721_p2;
wire   [0:0] p_Result_5_fu_751_p3;
wire   [30:0] tmp_6_fu_758_p3;
wire   [0:0] p_Result_6_fu_772_p3;
wire   [31:0] p_405_fu_764_p3;
wire   [31:0] p_Val2_27_fu_779_p3;
wire   [31:0] p_396_fu_791_p3;
wire   [31:0] tmp_fu_798_p2;
reg    grp_fu_126_ce;
reg    grp_fu_129_ce;
reg    grp_fu_132_ce;
reg    grp_fu_135_ce;
reg    grp_fu_138_ce;
reg    grp_fu_141_ce;
reg    grp_fu_144_ce;
reg    grp_fu_147_ce;
reg    grp_fu_150_ce;
reg    grp_fu_155_ce;
reg    grp_fu_160_ce;
reg    grp_fu_165_ce;
wire    ap_CS_fsm_state30;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 real_start_status_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 start_once_reg = 1'b0;
#0 start_control_reg = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
end

hls_target_sitofphbi #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_target_sitofphbi_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_381_reg_817),
    .ce(grp_fu_126_ce),
    .dout(grp_fu_126_p1)
);

hls_target_sitofphbi #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_target_sitofphbi_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_mul_stencil_value_0_reg_822),
    .ce(grp_fu_129_ce),
    .dout(grp_fu_129_p1)
);

hls_target_sitofphbi #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_target_sitofphbi_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_mul_stencil_value_0_1_reg_827),
    .ce(grp_fu_132_ce),
    .dout(grp_fu_132_p1)
);

hls_target_sitofphbi #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_target_sitofphbi_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_mul_stencil_value_0_2_reg_832),
    .ce(grp_fu_135_ce),
    .dout(grp_fu_135_p1)
);

hls_target_fpext_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
hls_target_fpext_ibs_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_382_reg_837),
    .ce(grp_fu_138_ce),
    .dout(grp_fu_138_p1)
);

hls_target_fpext_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
hls_target_fpext_ibs_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_391_reg_842),
    .ce(grp_fu_141_ce),
    .dout(grp_fu_141_p1)
);

hls_target_fpext_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
hls_target_fpext_ibs_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_400_reg_847),
    .ce(grp_fu_144_ce),
    .dout(grp_fu_144_p1)
);

hls_target_fpext_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
hls_target_fpext_ibs_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_409_reg_852),
    .ce(grp_fu_147_ce),
    .dout(grp_fu_147_p1)
);

hls_target_dmul_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
hls_target_dmul_6jbC_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_383_reg_857),
    .din1(64'd4589168020290535424),
    .ce(grp_fu_150_ce),
    .dout(grp_fu_150_p2)
);

hls_target_dmul_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
hls_target_dmul_6jbC_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_392_reg_862),
    .din1(64'd4589168020290535424),
    .ce(grp_fu_155_ce),
    .dout(grp_fu_155_p2)
);

hls_target_dmul_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
hls_target_dmul_6jbC_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_401_reg_867),
    .din1(64'd4589168020290535424),
    .ce(grp_fu_160_ce),
    .dout(grp_fu_160_p2)
);

hls_target_dmul_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
hls_target_dmul_6jbC_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_410_reg_872),
    .din1(64'd4589168020290535424),
    .ce(grp_fu_165_ce),
    .dout(grp_fu_165_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == real_start) | (ap_done_reg == 1'b1)))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == real_start) | (ap_done_reg == 1'b1)))) begin
            ap_enable_reg_pp0_iter27 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        real_start_status_reg <= 1'b0;
    end else begin
        if ((start_full_n == 1'b1)) begin
            real_start_status_reg <= 1'b0;
        end else if (((1'b0 == start_full_n) & (1'b1 == internal_ap_ready))) begin
            real_start_status_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_control_reg <= 1'b0;
    end else begin
        if (((1'b1 == real_start) & ((1'b1 == internal_ap_ready) | (1'b0 == start_once_reg)))) begin
            start_control_reg <= 1'b1;
        end else if ((1'b1 == start_control_reg)) begin
            start_control_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if ((1'b1 == real_start)) begin
            start_once_reg <= 1'b1;
        end else if ((1'b0 == ap_start)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_170_p2))) begin
        indvar_flatten_reg_115 <= indvar_flatten_next_fu_176_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == real_start) | (ap_done_reg == 1'b1)))) begin
        indvar_flatten_reg_115 <= 21'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter10_exitcond_flatten_reg_808 <= ap_reg_pp0_iter9_exitcond_flatten_reg_808;
        ap_reg_pp0_iter11_exitcond_flatten_reg_808 <= ap_reg_pp0_iter10_exitcond_flatten_reg_808;
        ap_reg_pp0_iter12_exitcond_flatten_reg_808 <= ap_reg_pp0_iter11_exitcond_flatten_reg_808;
        ap_reg_pp0_iter13_exitcond_flatten_reg_808 <= ap_reg_pp0_iter12_exitcond_flatten_reg_808;
        ap_reg_pp0_iter14_exitcond_flatten_reg_808 <= ap_reg_pp0_iter13_exitcond_flatten_reg_808;
        ap_reg_pp0_iter15_exitcond_flatten_reg_808 <= ap_reg_pp0_iter14_exitcond_flatten_reg_808;
        ap_reg_pp0_iter16_exitcond_flatten_reg_808 <= ap_reg_pp0_iter15_exitcond_flatten_reg_808;
        ap_reg_pp0_iter17_exitcond_flatten_reg_808 <= ap_reg_pp0_iter16_exitcond_flatten_reg_808;
        ap_reg_pp0_iter18_exitcond_flatten_reg_808 <= ap_reg_pp0_iter17_exitcond_flatten_reg_808;
        ap_reg_pp0_iter19_exitcond_flatten_reg_808 <= ap_reg_pp0_iter18_exitcond_flatten_reg_808;
        ap_reg_pp0_iter20_exitcond_flatten_reg_808 <= ap_reg_pp0_iter19_exitcond_flatten_reg_808;
        ap_reg_pp0_iter21_exitcond_flatten_reg_808 <= ap_reg_pp0_iter20_exitcond_flatten_reg_808;
        ap_reg_pp0_iter22_exitcond_flatten_reg_808 <= ap_reg_pp0_iter21_exitcond_flatten_reg_808;
        ap_reg_pp0_iter23_exitcond_flatten_reg_808 <= ap_reg_pp0_iter22_exitcond_flatten_reg_808;
        ap_reg_pp0_iter23_p_Result_4_reg_917 <= p_Result_4_reg_917;
        ap_reg_pp0_iter23_p_Result_s_reg_897 <= p_Result_s_reg_897;
        ap_reg_pp0_iter23_p_Val2_17_reg_937 <= p_Val2_17_reg_937;
        ap_reg_pp0_iter23_p_Val2_21_reg_957 <= p_Val2_21_reg_957;
        ap_reg_pp0_iter24_exitcond_flatten_reg_808 <= ap_reg_pp0_iter23_exitcond_flatten_reg_808;
        ap_reg_pp0_iter24_p_Result_s_reg_897 <= ap_reg_pp0_iter23_p_Result_s_reg_897;
        ap_reg_pp0_iter24_p_Val2_17_reg_937 <= ap_reg_pp0_iter23_p_Val2_17_reg_937;
        ap_reg_pp0_iter24_p_Val2_19_reg_992 <= p_Val2_19_reg_992;
        ap_reg_pp0_iter24_p_Val2_21_reg_957 <= ap_reg_pp0_iter23_p_Val2_21_reg_957;
        ap_reg_pp0_iter25_exitcond_flatten_reg_808 <= ap_reg_pp0_iter24_exitcond_flatten_reg_808;
        ap_reg_pp0_iter25_tmp_3_reg_1013 <= tmp_3_reg_1013;
        ap_reg_pp0_iter26_exitcond_flatten_reg_808 <= ap_reg_pp0_iter25_exitcond_flatten_reg_808;
        ap_reg_pp0_iter2_exitcond_flatten_reg_808 <= ap_reg_pp0_iter1_exitcond_flatten_reg_808;
        ap_reg_pp0_iter3_exitcond_flatten_reg_808 <= ap_reg_pp0_iter2_exitcond_flatten_reg_808;
        ap_reg_pp0_iter4_exitcond_flatten_reg_808 <= ap_reg_pp0_iter3_exitcond_flatten_reg_808;
        ap_reg_pp0_iter5_exitcond_flatten_reg_808 <= ap_reg_pp0_iter4_exitcond_flatten_reg_808;
        ap_reg_pp0_iter6_exitcond_flatten_reg_808 <= ap_reg_pp0_iter5_exitcond_flatten_reg_808;
        ap_reg_pp0_iter7_exitcond_flatten_reg_808 <= ap_reg_pp0_iter6_exitcond_flatten_reg_808;
        ap_reg_pp0_iter8_exitcond_flatten_reg_808 <= ap_reg_pp0_iter7_exitcond_flatten_reg_808;
        ap_reg_pp0_iter9_exitcond_flatten_reg_808 <= ap_reg_pp0_iter8_exitcond_flatten_reg_808;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_808 <= exitcond_flatten_reg_808;
        exitcond_flatten_reg_808 <= exitcond_flatten_fu_170_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter21_exitcond_flatten_reg_808))) begin
        isNeg_1_reg_927 <= sh_assign_3_fu_306_p2[32'd11];
        isNeg_2_reg_947 <= sh_assign_5_fu_359_p2[32'd11];
        isNeg_3_reg_967 <= sh_assign_7_fu_412_p2[32'd11];
        isNeg_reg_907 <= sh_assign_fu_245_p2[32'd11];
        loc_V_2_reg_902 <= loc_V_2_fu_237_p1;
        loc_V_4_reg_922 <= loc_V_4_fu_298_p1;
        loc_V_6_reg_942 <= loc_V_6_fu_351_p1;
        loc_V_8_reg_962 <= loc_V_8_fu_404_p1;
        p_Result_4_reg_917 <= p_Val2_s_fu_277_p1[32'd63];
        p_Result_s_reg_897 <= p_Val2_5_fu_216_p1[32'd63];
        p_Val2_17_reg_937 <= p_Val2_17_fu_338_p1;
        p_Val2_21_reg_957 <= p_Val2_21_fu_391_p1;
        sh_assign_2_reg_912 <= sh_assign_2_fu_269_p3;
        sh_assign_4_reg_932 <= sh_assign_4_fu_330_p3;
        sh_assign_6_reg_952 <= sh_assign_6_fu_383_p3;
        sh_assign_8_reg_972 <= sh_assign_8_fu_436_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_808 == 1'd0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        p_381_reg_817 <= p_381_fu_182_p1;
        p_mul_stencil_value_0_1_reg_827 <= {{p_mul_stencil_stream_V_value_V_dout[95:64]}};
        p_mul_stencil_value_0_2_reg_832 <= {{p_mul_stencil_stream_V_value_V_dout[127:96]}};
        p_mul_stencil_value_0_reg_822 <= {{p_mul_stencil_stream_V_value_V_dout[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_808))) begin
        p_382_reg_837 <= grp_fu_126_p1;
        p_391_reg_842 <= grp_fu_129_p1;
        p_400_reg_847 <= grp_fu_132_p1;
        p_409_reg_852 <= grp_fu_135_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_808))) begin
        p_383_reg_857 <= grp_fu_138_p1;
        p_392_reg_862 <= grp_fu_141_p1;
        p_401_reg_867 <= grp_fu_144_p1;
        p_410_reg_872 <= grp_fu_147_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter20_exitcond_flatten_reg_808))) begin
        p_384_reg_877 <= grp_fu_150_p2;
        p_393_reg_882 <= grp_fu_155_p2;
        p_402_reg_887 <= grp_fu_160_p2;
        p_411_reg_892 <= grp_fu_165_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter25_exitcond_flatten_reg_808))) begin
        p_415_reg_1043 <= p_415_fu_803_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter22_exitcond_flatten_reg_808))) begin
        p_Val2_19_reg_992 <= p_Val2_19_fu_640_p3;
        p_Val2_23_reg_998 <= p_Val2_23_fu_705_p3;
        p_Val2_7_reg_977 <= p_Val2_7_fu_502_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter24_exitcond_flatten_reg_808))) begin
        p_Val2_26_reg_1033 <= p_Val2_26_fu_746_p3;
        tmp5_reg_1038 <= tmp5_fu_785_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter23_exitcond_flatten_reg_808))) begin
        tmp_13_i_i3_reg_1023[30 : 0] <= tmp_13_i_i3_fu_737_p1[30 : 0];
        tmp_13_i_i_reg_1003[30 : 0] <= tmp_13_i_i_fu_712_p1[30 : 0];
        tmp_16_i_i2_reg_1018 <= tmp_16_i_i2_fu_732_p2;
        tmp_16_i_i3_reg_1028 <= tmp_16_i_i3_fu_740_p2;
        tmp_3_reg_1013 <= tmp_3_fu_726_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter23_exitcond_flatten_reg_808) & (ap_reg_pp0_iter23_p_Result_s_reg_897 == 1'd1))) begin
        tmp_16_i_i_reg_1008 <= tmp_16_i_i_fu_715_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter22_exitcond_flatten_reg_808) & (p_Result_4_reg_917 == 1'd1))) begin
        tmp_27_reg_982 <= tmp_27_fu_574_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter22_exitcond_flatten_reg_808) & (1'd0 == p_Result_4_reg_917))) begin
        tmp_28_reg_987 <= tmp_28_fu_578_p1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_170_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b0 == real_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10) & (1'b0 == ap_enable_reg_pp0_iter11) & (1'b0 == ap_enable_reg_pp0_iter12) & (1'b0 == ap_enable_reg_pp0_iter13) & (1'b0 == ap_enable_reg_pp0_iter14) & (1'b0 == ap_enable_reg_pp0_iter15) & (1'b0 == ap_enable_reg_pp0_iter16) & (1'b0 == ap_enable_reg_pp0_iter17) & (1'b0 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_enable_reg_pp0_iter19) & (1'b0 == ap_enable_reg_pp0_iter20) & (1'b0 == ap_enable_reg_pp0_iter21) & (1'b0 == ap_enable_reg_pp0_iter22) & (1'b0 == ap_enable_reg_pp0_iter23) & (1'b0 == ap_enable_reg_pp0_iter24) & (1'b0 == ap_enable_reg_pp0_iter25) & (1'b0 == ap_enable_reg_pp0_iter26) & (1'b0 == ap_enable_reg_pp0_iter27))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_126_ce = 1'b1;
    end else begin
        grp_fu_126_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_129_ce = 1'b1;
    end else begin
        grp_fu_129_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_132_ce = 1'b1;
    end else begin
        grp_fu_132_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_135_ce = 1'b1;
    end else begin
        grp_fu_135_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_138_ce = 1'b1;
    end else begin
        grp_fu_138_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_141_ce = 1'b1;
    end else begin
        grp_fu_141_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_144_ce = 1'b1;
    end else begin
        grp_fu_144_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_147_ce = 1'b1;
    end else begin
        grp_fu_147_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_150_ce = 1'b1;
    end else begin
        grp_fu_150_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_155_ce = 1'b1;
    end else begin
        grp_fu_155_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_160_ce = 1'b1;
    end else begin
        grp_fu_160_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_165_ce = 1'b1;
    end else begin
        grp_fu_165_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (exitcond_flatten_reg_808 == 1'd0))) begin
        p_mul_stencil_stream_V_value_V_blk_n = p_mul_stencil_stream_V_value_V_empty_n;
    end else begin
        p_mul_stencil_stream_V_value_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_808 == 1'd0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        p_mul_stencil_stream_V_value_V_read = 1'b1;
    end else begin
        p_mul_stencil_stream_V_value_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter27) & (1'd0 == ap_reg_pp0_iter26_exitcond_flatten_reg_808))) begin
        p_p2_mul1_stencil_stream_V_value_V_blk_n = p_p2_mul1_stencil_stream_V_value_V_full_n;
    end else begin
        p_p2_mul1_stencil_stream_V_value_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter27) & (1'd0 == ap_reg_pp0_iter26_exitcond_flatten_reg_808) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        p_p2_mul1_stencil_stream_V_value_V_write = 1'b1;
    end else begin
        p_p2_mul1_stencil_stream_V_value_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == real_start_status_reg)) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == real_start) | (ap_done_reg == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter27) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_170_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp0_iter27) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_170_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_flag00001001 = (((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_808 == 1'd0) & (1'b0 == p_mul_stencil_stream_V_value_V_empty_n)) | ((1'b1 == ap_enable_reg_pp0_iter27) & (1'd0 == ap_reg_pp0_iter26_exitcond_flatten_reg_808) & (1'b0 == p_p2_mul1_stencil_stream_V_value_V_full_n)));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011001 = (((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_808 == 1'd0) & (1'b0 == p_mul_stencil_stream_V_value_V_empty_n)) | ((1'b1 == ap_enable_reg_pp0_iter27) & (1'd0 == ap_reg_pp0_iter26_exitcond_flatten_reg_808) & (1'b0 == p_p2_mul1_stencil_stream_V_value_V_full_n)));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011011 = (((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_808 == 1'd0) & (1'b0 == p_mul_stencil_stream_V_value_V_empty_n)) | ((1'b1 == ap_enable_reg_pp0_iter27) & (1'd0 == ap_reg_pp0_iter26_exitcond_flatten_reg_808) & (1'b0 == p_p2_mul1_stencil_stream_V_value_V_full_n)));
end

always @ (*) begin
    ap_block_state1 = ((1'b0 == real_start) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp0_stage0_iter27 = ((1'd0 == ap_reg_pp0_iter26_exitcond_flatten_reg_808) & (1'b0 == p_p2_mul1_stencil_stream_V_value_V_full_n));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((exitcond_flatten_reg_808 == 1'd0) & (1'b0 == p_mul_stencil_stream_V_value_V_empty_n));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign exitcond_flatten_fu_170_p2 = ((indvar_flatten_reg_115 == 21'd2064609) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_176_p2 = (indvar_flatten_reg_115 + 21'd1);

assign isNeg_1_fu_312_p3 = sh_assign_3_fu_306_p2[32'd11];

assign isNeg_2_fu_365_p3 = sh_assign_5_fu_359_p2[32'd11];

assign isNeg_3_fu_418_p3 = sh_assign_7_fu_412_p2[32'd11];

assign isNeg_fu_251_p3 = sh_assign_fu_245_p2[32'd11];

assign loc_V_2_fu_237_p1 = p_Val2_5_fu_216_p1[51:0];

assign loc_V_3_fu_288_p4 = {{p_Val2_s_fu_277_p1[62:52]}};

assign loc_V_4_fu_298_p1 = p_Val2_s_fu_277_p1[51:0];

assign loc_V_5_fu_341_p4 = {{p_Val2_17_fu_338_p1[62:52]}};

assign loc_V_6_fu_351_p1 = p_Val2_17_fu_338_p1[51:0];

assign loc_V_7_fu_394_p4 = {{p_Val2_21_fu_391_p1[62:52]}};

assign loc_V_8_fu_404_p1 = p_Val2_21_fu_391_p1[51:0];

assign loc_V_fu_227_p4 = {{p_Val2_5_fu_216_p1[62:52]}};

assign p_381_fu_182_p1 = p_mul_stencil_stream_V_value_V_dout[31:0];

assign p_396_fu_791_p3 = {{ap_reg_pp0_iter25_tmp_3_reg_1013}, {2'd0}};

assign p_405_fu_764_p3 = {{tmp_6_fu_758_p3}, {1'd0}};

assign p_415_fu_803_p2 = (tmp5_reg_1038 + tmp_fu_798_p2);

assign p_Result_5_fu_751_p3 = ap_reg_pp0_iter24_p_Val2_17_reg_937[32'd63];

assign p_Result_6_fu_772_p3 = ap_reg_pp0_iter24_p_Val2_21_reg_957[32'd63];

assign p_Val2_15_fu_567_p3 = ((isNeg_1_reg_927[0:0] === 1'b1) ? tmp_s_fu_553_p1 : tmp_2_fu_557_p4);

assign p_Val2_17_fu_338_p1 = p_402_reg_887;

assign p_Val2_19_fu_640_p3 = ((isNeg_2_reg_947[0:0] === 1'b1) ? tmp_4_fu_626_p1 : tmp_5_fu_630_p4);

assign p_Val2_21_fu_391_p1 = p_411_reg_892;

assign p_Val2_23_fu_705_p3 = ((isNeg_3_reg_967[0:0] === 1'b1) ? tmp_9_fu_691_p1 : tmp_10_fu_695_p4);

assign p_Val2_26_fu_746_p3 = ((ap_reg_pp0_iter24_p_Result_s_reg_897[0:0] === 1'b1) ? tmp_16_i_i_reg_1008 : tmp_13_i_i_reg_1003);

assign p_Val2_27_fu_779_p3 = ((p_Result_6_fu_772_p3[0:0] === 1'b1) ? tmp_16_i_i3_reg_1028 : tmp_13_i_i3_reg_1023);

assign p_Val2_5_fu_216_p1 = p_384_reg_877;

assign p_Val2_7_fu_502_p3 = ((isNeg_reg_907[0:0] === 1'b1) ? tmp_7_fu_488_p1 : tmp_8_fu_492_p4);

assign p_Val2_s_fu_277_p1 = p_393_reg_882;

assign p_p2_mul1_stencil_stream_V_value_V_din = p_415_reg_1043;

assign sh_assign_2_fu_269_p3 = ((isNeg_fu_251_p3[0:0] === 1'b1) ? tmp_8_i_cast_i_fu_265_p1 : sh_assign_fu_245_p2);

assign sh_assign_2_i_cast_i_1_fu_522_p1 = $signed(sh_assign_4_reg_932);

assign sh_assign_2_i_cast_i_2_fu_595_p1 = $signed(sh_assign_6_reg_952);

assign sh_assign_2_i_cast_i_3_fu_660_p1 = $signed(sh_assign_8_reg_972);

assign sh_assign_2_i_cast_i_fu_457_p1 = $signed(sh_assign_2_reg_912);

assign sh_assign_3_fu_306_p2 = ($signed(12'd3073) + $signed(tmp_i_i_cast_i9_fu_302_p1));

assign sh_assign_4_fu_330_p3 = ((isNeg_1_fu_312_p3[0:0] === 1'b1) ? tmp_8_i_cast_i1_fu_326_p1 : sh_assign_3_fu_306_p2);

assign sh_assign_5_fu_359_p2 = ($signed(12'd3073) + $signed(tmp_i_i_cast_i1_fu_355_p1));

assign sh_assign_6_fu_383_p3 = ((isNeg_2_fu_365_p3[0:0] === 1'b1) ? tmp_8_i_cast_i2_fu_379_p1 : sh_assign_5_fu_359_p2);

assign sh_assign_7_fu_412_p2 = ($signed(12'd3073) + $signed(tmp_i_i_cast_i2_fu_408_p1));

assign sh_assign_8_fu_436_p3 = ((isNeg_3_fu_418_p3[0:0] === 1'b1) ? tmp_8_i_cast_i3_fu_432_p1 : sh_assign_7_fu_412_p2);

assign sh_assign_fu_245_p2 = ($signed(12'd3073) + $signed(tmp_i_i_cast_i_fu_241_p1));

assign start_out = real_start;

assign start_write = (ap_start & start_control_reg);

assign tmp5_fu_785_p2 = (p_405_fu_764_p3 + p_Val2_27_fu_779_p3);

assign tmp_10_fu_695_p4 = {{tmp_11_i_i3_fu_677_p2[83:53]}};

assign tmp_10_i_i1_fu_533_p2 = tmp_i_i7_fu_509_p4 >> tmp_9_i_cast_i1_fu_529_p1;

assign tmp_10_i_i2_fu_606_p2 = tmp_i_i1_fu_582_p4 >> tmp_9_i_cast_i2_fu_602_p1;

assign tmp_10_i_i3_fu_671_p2 = tmp_i_i2_fu_647_p4 >> tmp_9_i_cast_i3_fu_667_p1;

assign tmp_10_i_i_fu_468_p2 = tmp_i_i_fu_444_p4 >> tmp_9_i_cast_i_fu_464_p1;

assign tmp_11_i_i1_fu_539_p2 = tmp_i_cast_i8_fu_518_p1 << tmp_9_i_i1_fu_525_p1;

assign tmp_11_i_i2_fu_612_p2 = tmp_i_cast_i1_fu_591_p1 << tmp_9_i_i2_fu_598_p1;

assign tmp_11_i_i3_fu_677_p2 = tmp_i_cast_i2_fu_656_p1 << tmp_9_i_i3_fu_663_p1;

assign tmp_11_i_i_fu_474_p2 = tmp_i_cast_i_fu_453_p1 << tmp_9_i_i_fu_460_p1;

assign tmp_13_i_i3_fu_737_p1 = p_Val2_23_reg_998;

assign tmp_13_i_i_fu_712_p1 = p_Val2_7_reg_977;

assign tmp_16_i_i1_fu_721_p2 = (30'd0 - tmp_27_reg_982);

assign tmp_16_i_i2_fu_732_p2 = (31'd0 - p_Val2_19_reg_992);

assign tmp_16_i_i3_fu_740_p2 = (32'd0 - tmp_13_i_i3_fu_737_p1);

assign tmp_16_i_i_fu_715_p2 = (32'd0 - tmp_13_i_i_fu_712_p1);

assign tmp_17_fu_480_p3 = tmp_10_i_i_fu_468_p2[32'd53];

assign tmp_26_fu_545_p3 = tmp_10_i_i1_fu_533_p2[32'd53];

assign tmp_27_fu_574_p1 = p_Val2_15_fu_567_p3[29:0];

assign tmp_28_fu_578_p1 = p_Val2_15_fu_567_p3[29:0];

assign tmp_2_fu_557_p4 = {{tmp_11_i_i1_fu_539_p2[83:53]}};

assign tmp_32_fu_618_p3 = tmp_10_i_i2_fu_606_p2[32'd53];

assign tmp_36_fu_683_p3 = tmp_10_i_i3_fu_671_p2[32'd53];

assign tmp_3_fu_726_p3 = ((ap_reg_pp0_iter23_p_Result_4_reg_917[0:0] === 1'b1) ? tmp_16_i_i1_fu_721_p2 : tmp_28_reg_987);

assign tmp_4_fu_626_p1 = tmp_32_fu_618_p3;

assign tmp_5_fu_630_p4 = {{tmp_11_i_i2_fu_612_p2[83:53]}};

assign tmp_6_fu_758_p3 = ((p_Result_5_fu_751_p3[0:0] === 1'b1) ? tmp_16_i_i2_reg_1018 : ap_reg_pp0_iter24_p_Val2_19_reg_992);

assign tmp_7_fu_488_p1 = tmp_17_fu_480_p3;

assign tmp_8_fu_492_p4 = {{tmp_11_i_i_fu_474_p2[83:53]}};

assign tmp_8_i_cast_i1_fu_326_p1 = $signed(tmp_8_i_i1_fu_320_p2);

assign tmp_8_i_cast_i2_fu_379_p1 = $signed(tmp_8_i_i2_fu_373_p2);

assign tmp_8_i_cast_i3_fu_432_p1 = $signed(tmp_8_i_i3_fu_426_p2);

assign tmp_8_i_cast_i_fu_265_p1 = $signed(tmp_8_i_i_fu_259_p2);

assign tmp_8_i_i1_fu_320_p2 = (11'd1023 - loc_V_3_fu_288_p4);

assign tmp_8_i_i2_fu_373_p2 = (11'd1023 - loc_V_5_fu_341_p4);

assign tmp_8_i_i3_fu_426_p2 = (11'd1023 - loc_V_7_fu_394_p4);

assign tmp_8_i_i_fu_259_p2 = (11'd1023 - loc_V_fu_227_p4);

assign tmp_9_fu_691_p1 = tmp_36_fu_683_p3;

assign tmp_9_i_cast_i1_fu_529_p1 = $unsigned(sh_assign_2_i_cast_i_1_fu_522_p1);

assign tmp_9_i_cast_i2_fu_602_p1 = $unsigned(sh_assign_2_i_cast_i_2_fu_595_p1);

assign tmp_9_i_cast_i3_fu_667_p1 = $unsigned(sh_assign_2_i_cast_i_3_fu_660_p1);

assign tmp_9_i_cast_i_fu_464_p1 = $unsigned(sh_assign_2_i_cast_i_fu_457_p1);

assign tmp_9_i_i1_fu_525_p1 = $unsigned(sh_assign_2_i_cast_i_1_fu_522_p1);

assign tmp_9_i_i2_fu_598_p1 = $unsigned(sh_assign_2_i_cast_i_2_fu_595_p1);

assign tmp_9_i_i3_fu_663_p1 = $unsigned(sh_assign_2_i_cast_i_3_fu_660_p1);

assign tmp_9_i_i_fu_460_p1 = $unsigned(sh_assign_2_i_cast_i_fu_457_p1);

assign tmp_fu_798_p2 = (p_396_fu_791_p3 + p_Val2_26_reg_1033);

assign tmp_i_cast_i1_fu_591_p1 = tmp_i_i1_fu_582_p4;

assign tmp_i_cast_i2_fu_656_p1 = tmp_i_i2_fu_647_p4;

assign tmp_i_cast_i8_fu_518_p1 = tmp_i_i7_fu_509_p4;

assign tmp_i_cast_i_fu_453_p1 = tmp_i_i_fu_444_p4;

assign tmp_i_i1_fu_582_p4 = {{{{1'd1}, {loc_V_6_reg_942}}}, {1'd0}};

assign tmp_i_i2_fu_647_p4 = {{{{1'd1}, {loc_V_8_reg_962}}}, {1'd0}};

assign tmp_i_i7_fu_509_p4 = {{{{1'd1}, {loc_V_4_reg_922}}}, {1'd0}};

assign tmp_i_i_cast_i1_fu_355_p1 = loc_V_5_fu_341_p4;

assign tmp_i_i_cast_i2_fu_408_p1 = loc_V_7_fu_394_p4;

assign tmp_i_i_cast_i9_fu_302_p1 = loc_V_3_fu_288_p4;

assign tmp_i_i_cast_i_fu_241_p1 = loc_V_fu_227_p4;

assign tmp_i_i_fu_444_p4 = {{{{1'd1}, {loc_V_2_reg_902}}}, {1'd0}};

assign tmp_s_fu_553_p1 = tmp_26_fu_545_p3;

always @ (posedge ap_clk) begin
    tmp_13_i_i_reg_1003[31] <= 1'b0;
    tmp_13_i_i3_reg_1023[31] <= 1'b0;
end

endmodule //Loop_2_proc
