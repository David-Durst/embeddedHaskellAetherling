module0 (I :: SSeqT 3 IntT) =
    n23 = Const_GenN SSeqV [IntV 1,IntV 1,IntV 1] 1 SSeqT 3 IntT
    n26 = Map2_sN 3 (ATupleN IntT IntT I0 I1) n23 I
    n32 = Map_sN 3 (MulN I) n26
    n35 = Reduce_sN 3 (AddN I) n32
    n36 = Const_GenN SSeqV [IntV 3] 4 SSeqT 1 IntT
    n38 = Map2_sN 1 (ATupleN IntT IntT I0 I1) n35 n36
    n44 = Map_sN 1 (DivN I) n38

module1 (hi :: SSeqT 30 (SSeqT 1 IntT)) =
    n1 = FIFON SSeqT 30 (SSeqT 1 IntT) 1 "hi"
    n2 = Shift_sN 30 1 SSeqT 1 IntT n1
    n3 = Shift_sN 30 1 SSeqT 1 IntT n2
    n4 = Map2_sN 30 (Map2_sN 1 (STupleN IntT I0 I1) I0 I1) n3 n2
    n11 = Map2_sN 30 (Map2_sN 1 (STupleAppendN 3 IntT I0 I1) I0 I1) n4 n1
    n22 = Map_sN 30 (Remove_1_sN (STupleToSSeqN 3 (IntT) I) I) n11
    n45 = Map_sN 30 module0 n22
    n46 = Partition_s_ssN 10 3 SSeqT 1 IntT n45
    n49 = Map_sN 10 (Down_1d_sN 3 2 SSeqT 1 IntT I) n46
    n50 = Unpartition_s_ssN 10 1 SSeqT 1 IntT n49
    n51 = FIFON SSeqT 10 (SSeqT 1 IntT) 1 "n50"
    n52 = FIFON SSeqT 10 (SSeqT 1 IntT) 1 "n51"

