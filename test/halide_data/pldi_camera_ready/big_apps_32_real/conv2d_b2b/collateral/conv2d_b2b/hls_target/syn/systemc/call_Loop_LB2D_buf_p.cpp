// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "call_Loop_LB2D_buf_p.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic call_Loop_LB2D_buf_p::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic call_Loop_LB2D_buf_p::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> call_Loop_LB2D_buf_p::ap_ST_fsm_state1 = "1";
const sc_lv<4> call_Loop_LB2D_buf_p::ap_ST_fsm_state2 = "10";
const sc_lv<4> call_Loop_LB2D_buf_p::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> call_Loop_LB2D_buf_p::ap_ST_fsm_state6 = "1000";
const bool call_Loop_LB2D_buf_p::ap_const_boolean_1 = true;
const sc_lv<32> call_Loop_LB2D_buf_p::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> call_Loop_LB2D_buf_p::ap_const_lv32_2 = "10";
const bool call_Loop_LB2D_buf_p::ap_const_boolean_0 = false;
const sc_lv<1> call_Loop_LB2D_buf_p::ap_const_lv1_0 = "0";
const sc_lv<32> call_Loop_LB2D_buf_p::ap_const_lv32_1 = "1";
const sc_lv<32> call_Loop_LB2D_buf_p::ap_const_lv32_3 = "11";
const sc_lv<1> call_Loop_LB2D_buf_p::ap_const_lv1_1 = "1";
const sc_lv<64> call_Loop_LB2D_buf_p::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<11> call_Loop_LB2D_buf_p::ap_const_lv11_0 = "00000000000";
const sc_lv<11> call_Loop_LB2D_buf_p::ap_const_lv11_438 = "10000111000";
const sc_lv<11> call_Loop_LB2D_buf_p::ap_const_lv11_1 = "1";
const sc_lv<32> call_Loop_LB2D_buf_p::ap_const_lv32_A = "1010";
const sc_lv<10> call_Loop_LB2D_buf_p::ap_const_lv10_0 = "0000000000";
const sc_lv<11> call_Loop_LB2D_buf_p::ap_const_lv11_780 = "11110000000";
const sc_lv<32> call_Loop_LB2D_buf_p::ap_const_lv32_3F = "111111";
const sc_lv<63> call_Loop_LB2D_buf_p::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> call_Loop_LB2D_buf_p::ap_const_lv64_FFFFFFFFFFFFFFFE = "1111111111111111111111111111111111111111111111111111111111111110";
const sc_lv<64> call_Loop_LB2D_buf_p::ap_const_lv64_1 = "1";

call_Loop_LB2D_buf_p::call_Loop_LB2D_buf_p(sc_module_name name) : sc_module(name), mVcdFile(0) {
    buffer_0_value_V_U = new call_Loop_LB2D_bubkb("buffer_0_value_V_U");
    buffer_0_value_V_U->clk(ap_clk);
    buffer_0_value_V_U->reset(ap_rst);
    buffer_0_value_V_U->address0(buffer_0_value_V_address0);
    buffer_0_value_V_U->ce0(buffer_0_value_V_ce0);
    buffer_0_value_V_U->q0(buffer_0_value_V_q0);
    buffer_0_value_V_U->address1(buffer_0_value_V_address1);
    buffer_0_value_V_U->ce1(buffer_0_value_V_ce1);
    buffer_0_value_V_U->we1(buffer_0_value_V_we1);
    buffer_0_value_V_U->d1(tmp_value_V_4_reg_343);
    buffer_1_value_V_U = new call_Loop_LB2D_bubkb("buffer_1_value_V_U");
    buffer_1_value_V_U->clk(ap_clk);
    buffer_1_value_V_U->reset(ap_rst);
    buffer_1_value_V_U->address0(buffer_1_value_V_address0);
    buffer_1_value_V_U->ce0(buffer_1_value_V_ce0);
    buffer_1_value_V_U->q0(buffer_1_value_V_q0);
    buffer_1_value_V_U->address1(ap_reg_pp0_iter1_buffer_1_value_V_ad_reg_333);
    buffer_1_value_V_U->ce1(buffer_1_value_V_ce1);
    buffer_1_value_V_U->we1(buffer_1_value_V_we1);
    buffer_1_value_V_U->d1(tmp_value_V_4_reg_343);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0);
    sensitive << ( ap_block_pp0_stage0_flag00011011 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00001001);
    sensitive << ( in_stream_V_value_V_empty_n );
    sensitive << ( slice_stream_V_value_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_304 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_reg_300 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( in_stream_V_value_V_empty_n );
    sensitive << ( slice_stream_V_value_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_304 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_reg_300 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( in_stream_V_value_V_empty_n );
    sensitive << ( slice_stream_V_value_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_304 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_reg_300 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( in_stream_V_value_V_empty_n );
    sensitive << ( tmp_3_reg_304 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);
    sensitive << ( slice_stream_V_value_V_full_n );
    sensitive << ( icmp_reg_300 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( tmp_3_fu_208_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( tmp_fu_180_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_operation_38);
    sensitive << ( ap_predicate_op38_load_state3 );

    SC_METHOD(thread_ap_enable_operation_46);
    sensitive << ( icmp_reg_300 );

    SC_METHOD(thread_ap_enable_operation_57);
    sensitive << ( tmp_9_reg_368 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_state3_pp0_iter0_stage0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_enable_state4_pp0_iter1_stage0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_enable_state5_pp0_iter2_stage0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_predicate_op38_load_state3);
    sensitive << ( icmp_reg_300 );
    sensitive << ( tmp_3_fu_208_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_buffer_0_value_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( col_cast_fu_220_p1 );

    SC_METHOD(thread_buffer_0_value_V_address1);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_buffer_0_value_V_ad_reg_328 );

    SC_METHOD(thread_buffer_0_value_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_buffer_0_value_V_ce1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_buffer_0_value_V_we1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( tmp_9_reg_368 );

    SC_METHOD(thread_buffer_1_value_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( col_cast_fu_220_p1 );

    SC_METHOD(thread_buffer_1_value_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_buffer_1_value_V_ce1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_buffer_1_value_V_we1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( tmp_9_reg_368 );

    SC_METHOD(thread_col_1_fu_214_p2);
    sensitive << ( col_reg_169 );

    SC_METHOD(thread_col_cast_fu_220_p1);
    sensitive << ( col_reg_169 );

    SC_METHOD(thread_icmp1_fu_238_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_fu_208_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_7_fu_228_p4 );

    SC_METHOD(thread_icmp_fu_202_p2);
    sensitive << ( tmp_fu_180_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_5_fu_192_p4 );

    SC_METHOD(thread_in_stream_V_value_V_blk_n);
    sensitive << ( in_stream_V_value_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( tmp_3_reg_304 );

    SC_METHOD(thread_in_stream_V_value_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_304 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( tmp_fu_180_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_Val2_14_0_phi_fu_265_p3);
    sensitive << ( tmp_8_reg_350 );
    sensitive << ( buffer_1_value_V_lo_reg_356 );
    sensitive << ( buffer_0_value_V_lo_reg_362 );

    SC_METHOD(thread_p_Val2_14_1_phi_fu_270_p3);
    sensitive << ( tmp_8_reg_350 );
    sensitive << ( buffer_1_value_V_lo_reg_356 );
    sensitive << ( buffer_0_value_V_lo_reg_362 );

    SC_METHOD(thread_p_write_idx_1_1_fu_250_p3);
    sensitive << ( write_idx_1_1_reg_158 );
    sensitive << ( icmp1_reg_313 );
    sensitive << ( write_idx_1_3_fu_244_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( real_start_status_reg );

    SC_METHOD(thread_row_1_fu_186_p2);
    sensitive << ( row_reg_147 );

    SC_METHOD(thread_slice_stream_V_value_V_blk_n);
    sensitive << ( slice_stream_V_value_V_full_n );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_reg_300 );

    SC_METHOD(thread_slice_stream_V_value_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_reg_300 );
    sensitive << ( tmp_value_V_4_reg_343 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( p_Val2_14_1_phi_fu_270_p3 );
    sensitive << ( p_Val2_14_0_phi_fu_265_p3 );

    SC_METHOD(thread_slice_stream_V_value_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_reg_300 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( ap_start );
    sensitive << ( start_control_reg );

    SC_METHOD(thread_tmp_3_fu_208_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( col_reg_169 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_5_fu_192_p4);
    sensitive << ( row_reg_147 );

    SC_METHOD(thread_tmp_7_fu_228_p4);
    sensitive << ( write_idx_1_1_phi_fu_161_p4 );

    SC_METHOD(thread_tmp_8_fu_257_p1);
    sensitive << ( p_write_idx_1_1_fu_250_p3 );

    SC_METHOD(thread_tmp_9_fu_261_p1);
    sensitive << ( p_write_idx_1_1_fu_250_p3 );

    SC_METHOD(thread_tmp_fu_180_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( row_reg_147 );

    SC_METHOD(thread_write_idx_1_1_phi_fu_161_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( tmp_3_reg_304 );
    sensitive << ( write_idx_1_1_reg_158 );
    sensitive << ( p_write_idx_1_1_fu_250_p3 );

    SC_METHOD(thread_write_idx_1_2_fu_285_p2);
    sensitive << ( write_idx_1_1_reg_158 );

    SC_METHOD(thread_write_idx_1_3_fu_244_p2);
    sensitive << ( write_idx_1_1_reg_158 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_fu_180_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_3_fu_208_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );

    real_start_status_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    start_once_reg = SC_LOGIC_0;
    start_control_reg = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "call_Loop_LB2D_buf_p_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_stream_V_value_V_dout, "(port)in_stream_V_value_V_dout");
    sc_trace(mVcdFile, in_stream_V_value_V_empty_n, "(port)in_stream_V_value_V_empty_n");
    sc_trace(mVcdFile, in_stream_V_value_V_read, "(port)in_stream_V_value_V_read");
    sc_trace(mVcdFile, slice_stream_V_value_V_din, "(port)slice_stream_V_value_V_din");
    sc_trace(mVcdFile, slice_stream_V_value_V_full_n, "(port)slice_stream_V_value_V_full_n");
    sc_trace(mVcdFile, slice_stream_V_value_V_write, "(port)slice_stream_V_value_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, real_start_status_reg, "real_start_status_reg");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, start_control_reg, "start_control_reg");
    sc_trace(mVcdFile, in_stream_V_value_V_blk_n, "in_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, tmp_3_reg_304, "tmp_3_reg_304");
    sc_trace(mVcdFile, slice_stream_V_value_V_blk_n, "slice_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_reg_300, "icmp_reg_300");
    sc_trace(mVcdFile, write_idx_1_1_reg_158, "write_idx_1_1_reg_158");
    sc_trace(mVcdFile, col_reg_169, "col_reg_169");
    sc_trace(mVcdFile, tmp_fu_180_p2, "tmp_fu_180_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, row_1_fu_186_p2, "row_1_fu_186_p2");
    sc_trace(mVcdFile, row_1_reg_295, "row_1_reg_295");
    sc_trace(mVcdFile, icmp_fu_202_p2, "icmp_fu_202_p2");
    sc_trace(mVcdFile, tmp_3_fu_208_p2, "tmp_3_fu_208_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, col_1_fu_214_p2, "col_1_fu_214_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, icmp1_fu_238_p2, "icmp1_fu_238_p2");
    sc_trace(mVcdFile, icmp1_reg_313, "icmp1_reg_313");
    sc_trace(mVcdFile, buffer_0_value_V_ad_reg_328, "buffer_0_value_V_ad_reg_328");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_buffer_0_value_V_ad_reg_328, "ap_reg_pp0_iter1_buffer_0_value_V_ad_reg_328");
    sc_trace(mVcdFile, buffer_1_value_V_ad_reg_333, "buffer_1_value_V_ad_reg_333");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_buffer_1_value_V_ad_reg_333, "ap_reg_pp0_iter1_buffer_1_value_V_ad_reg_333");
    sc_trace(mVcdFile, p_write_idx_1_1_fu_250_p3, "p_write_idx_1_1_fu_250_p3");
    sc_trace(mVcdFile, tmp_value_V_4_reg_343, "tmp_value_V_4_reg_343");
    sc_trace(mVcdFile, tmp_8_fu_257_p1, "tmp_8_fu_257_p1");
    sc_trace(mVcdFile, tmp_8_reg_350, "tmp_8_reg_350");
    sc_trace(mVcdFile, buffer_1_value_V_q0, "buffer_1_value_V_q0");
    sc_trace(mVcdFile, buffer_1_value_V_lo_reg_356, "buffer_1_value_V_lo_reg_356");
    sc_trace(mVcdFile, buffer_0_value_V_q0, "buffer_0_value_V_q0");
    sc_trace(mVcdFile, buffer_0_value_V_lo_reg_362, "buffer_0_value_V_lo_reg_362");
    sc_trace(mVcdFile, tmp_9_fu_261_p1, "tmp_9_fu_261_p1");
    sc_trace(mVcdFile, tmp_9_reg_368, "tmp_9_reg_368");
    sc_trace(mVcdFile, write_idx_1_2_fu_285_p2, "write_idx_1_2_fu_285_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, buffer_0_value_V_address0, "buffer_0_value_V_address0");
    sc_trace(mVcdFile, buffer_0_value_V_ce0, "buffer_0_value_V_ce0");
    sc_trace(mVcdFile, buffer_0_value_V_address1, "buffer_0_value_V_address1");
    sc_trace(mVcdFile, buffer_0_value_V_ce1, "buffer_0_value_V_ce1");
    sc_trace(mVcdFile, buffer_0_value_V_we1, "buffer_0_value_V_we1");
    sc_trace(mVcdFile, buffer_1_value_V_address0, "buffer_1_value_V_address0");
    sc_trace(mVcdFile, buffer_1_value_V_ce0, "buffer_1_value_V_ce0");
    sc_trace(mVcdFile, buffer_1_value_V_ce1, "buffer_1_value_V_ce1");
    sc_trace(mVcdFile, buffer_1_value_V_we1, "buffer_1_value_V_we1");
    sc_trace(mVcdFile, write_idx_1_reg_135, "write_idx_1_reg_135");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, row_reg_147, "row_reg_147");
    sc_trace(mVcdFile, write_idx_1_1_phi_fu_161_p4, "write_idx_1_1_phi_fu_161_p4");
    sc_trace(mVcdFile, col_cast_fu_220_p1, "col_cast_fu_220_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00001001, "ap_block_pp0_stage0_flag00001001");
    sc_trace(mVcdFile, tmp_5_fu_192_p4, "tmp_5_fu_192_p4");
    sc_trace(mVcdFile, tmp_7_fu_228_p4, "tmp_7_fu_228_p4");
    sc_trace(mVcdFile, write_idx_1_3_fu_244_p2, "write_idx_1_3_fu_244_p2");
    sc_trace(mVcdFile, p_Val2_14_1_phi_fu_270_p3, "p_Val2_14_1_phi_fu_270_p3");
    sc_trace(mVcdFile, p_Val2_14_0_phi_fu_265_p3, "p_Val2_14_0_phi_fu_265_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0, "ap_block_pp0");
    sc_trace(mVcdFile, ap_enable_operation_57, "ap_enable_operation_57");
    sc_trace(mVcdFile, ap_enable_state5_pp0_iter2_stage0, "ap_enable_state5_pp0_iter2_stage0");
    sc_trace(mVcdFile, ap_predicate_op38_load_state3, "ap_predicate_op38_load_state3");
    sc_trace(mVcdFile, ap_enable_operation_38, "ap_enable_operation_38");
    sc_trace(mVcdFile, ap_enable_state3_pp0_iter0_stage0, "ap_enable_state3_pp0_iter0_stage0");
    sc_trace(mVcdFile, ap_enable_operation_46, "ap_enable_operation_46");
    sc_trace(mVcdFile, ap_enable_state4_pp0_iter1_stage0, "ap_enable_state4_pp0_iter1_stage0");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

call_Loop_LB2D_buf_p::~call_Loop_LB2D_buf_p() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete buffer_0_value_V_U;
    delete buffer_1_value_V_U;
}

void call_Loop_LB2D_buf_p::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(tmp_fu_180_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_180_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_180_p2.read()))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_208_p2.read()))) {
        col_reg_169 = col_1_fu_214_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_180_p2.read()))) {
        col_reg_169 = ap_const_lv11_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        real_start_status_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(start_full_n.read(), ap_const_logic_1)) {
            real_start_status_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read()))) {
            real_start_status_reg = ap_const_logic_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        row_reg_147 = row_1_reg_295.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        row_reg_147 = ap_const_lv11_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_control_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read()) || 
              esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read())))) {
            start_control_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, start_control_reg.read())) {
            start_control_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, real_start.read())) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_3_reg_304.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        write_idx_1_1_reg_158 = p_write_idx_1_1_fu_250_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_180_p2.read()))) {
        write_idx_1_1_reg_158 = write_idx_1_reg_135.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        write_idx_1_reg_135 = write_idx_1_2_fu_285_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        write_idx_1_reg_135 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_buffer_0_value_V_ad_reg_328 = buffer_0_value_V_ad_reg_328.read();
        ap_reg_pp0_iter1_buffer_1_value_V_ad_reg_333 = buffer_1_value_V_ad_reg_333.read();
        tmp_3_reg_304 = tmp_3_fu_208_p2.read();
        tmp_9_reg_368 = tmp_9_fu_261_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_208_p2.read()))) {
        buffer_0_value_V_ad_reg_328 =  (sc_lv<11>) (col_cast_fu_220_p1.read());
        buffer_1_value_V_ad_reg_333 =  (sc_lv<11>) (col_cast_fu_220_p1.read());
        icmp1_reg_313 = icmp1_fu_238_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_300.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        buffer_0_value_V_lo_reg_362 = buffer_0_value_V_q0.read();
        buffer_1_value_V_lo_reg_356 = buffer_1_value_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_180_p2.read()))) {
        icmp_reg_300 = icmp_fu_202_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        row_1_reg_295 = row_1_fu_186_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_300.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        tmp_8_reg_350 = tmp_8_fu_257_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_3_reg_304.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        tmp_value_V_4_reg_343 = in_stream_V_value_V_dout.read();
    }
}

void call_Loop_LB2D_buf_p::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void call_Loop_LB2D_buf_p::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void call_Loop_LB2D_buf_p::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void call_Loop_LB2D_buf_p::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[3];
}

void call_Loop_LB2D_buf_p::thread_ap_block_pp0() {
    ap_block_pp0 = esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_pp0_stage0_flag00011011.read());
}

void call_Loop_LB2D_buf_p::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void call_Loop_LB2D_buf_p::thread_ap_block_pp0_stage0_flag00001001() {
    ap_block_pp0_stage0_flag00001001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_3_reg_304.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_300.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, slice_stream_V_value_V_full_n.read())));
}

void call_Loop_LB2D_buf_p::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_3_reg_304.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_300.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, slice_stream_V_value_V_full_n.read())));
}

void call_Loop_LB2D_buf_p::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_3_reg_304.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_300.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, slice_stream_V_value_V_full_n.read())));
}

void call_Loop_LB2D_buf_p::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void call_Loop_LB2D_buf_p::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void call_Loop_LB2D_buf_p::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(tmp_3_reg_304.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_value_V_empty_n.read()));
}

void call_Loop_LB2D_buf_p::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_300.read()) && esl_seteq<1,1,1>(ap_const_logic_0, slice_stream_V_value_V_full_n.read()));
}

void call_Loop_LB2D_buf_p::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(tmp_3_fu_208_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void call_Loop_LB2D_buf_p::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_fu_180_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void call_Loop_LB2D_buf_p::thread_ap_enable_operation_38() {
    ap_enable_operation_38 = esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_load_state3.read());
}

void call_Loop_LB2D_buf_p::thread_ap_enable_operation_46() {
    ap_enable_operation_46 = esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_300.read());
}

void call_Loop_LB2D_buf_p::thread_ap_enable_operation_57() {
    ap_enable_operation_57 = esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_368.read());
}

void call_Loop_LB2D_buf_p::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void call_Loop_LB2D_buf_p::thread_ap_enable_state3_pp0_iter0_stage0() {
    ap_enable_state3_pp0_iter0_stage0 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1));
}

void call_Loop_LB2D_buf_p::thread_ap_enable_state4_pp0_iter1_stage0() {
    ap_enable_state4_pp0_iter1_stage0 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1));
}

void call_Loop_LB2D_buf_p::thread_ap_enable_state5_pp0_iter2_stage0() {
    ap_enable_state5_pp0_iter2_stage0 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_logic_1));
}

void call_Loop_LB2D_buf_p::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void call_Loop_LB2D_buf_p::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void call_Loop_LB2D_buf_p::thread_ap_predicate_op38_load_state3() {
    ap_predicate_op38_load_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_300.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_208_p2.read()));
}

void call_Loop_LB2D_buf_p::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void call_Loop_LB2D_buf_p::thread_buffer_0_value_V_address0() {
    buffer_0_value_V_address0 =  (sc_lv<11>) (col_cast_fu_220_p1.read());
}

void call_Loop_LB2D_buf_p::thread_buffer_0_value_V_address1() {
    buffer_0_value_V_address1 = ap_reg_pp0_iter1_buffer_0_value_V_ad_reg_328.read();
}

void call_Loop_LB2D_buf_p::thread_buffer_0_value_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        buffer_0_value_V_ce0 = ap_const_logic_1;
    } else {
        buffer_0_value_V_ce0 = ap_const_logic_0;
    }
}

void call_Loop_LB2D_buf_p::thread_buffer_0_value_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        buffer_0_value_V_ce1 = ap_const_logic_1;
    } else {
        buffer_0_value_V_ce1 = ap_const_logic_0;
    }
}

void call_Loop_LB2D_buf_p::thread_buffer_0_value_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_368.read()))) {
        buffer_0_value_V_we1 = ap_const_logic_1;
    } else {
        buffer_0_value_V_we1 = ap_const_logic_0;
    }
}

void call_Loop_LB2D_buf_p::thread_buffer_1_value_V_address0() {
    buffer_1_value_V_address0 =  (sc_lv<11>) (col_cast_fu_220_p1.read());
}

void call_Loop_LB2D_buf_p::thread_buffer_1_value_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        buffer_1_value_V_ce0 = ap_const_logic_1;
    } else {
        buffer_1_value_V_ce0 = ap_const_logic_0;
    }
}

void call_Loop_LB2D_buf_p::thread_buffer_1_value_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        buffer_1_value_V_ce1 = ap_const_logic_1;
    } else {
        buffer_1_value_V_ce1 = ap_const_logic_0;
    }
}

void call_Loop_LB2D_buf_p::thread_buffer_1_value_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_9_reg_368.read(), ap_const_lv1_1))) {
        buffer_1_value_V_we1 = ap_const_logic_1;
    } else {
        buffer_1_value_V_we1 = ap_const_logic_0;
    }
}

void call_Loop_LB2D_buf_p::thread_col_1_fu_214_p2() {
    col_1_fu_214_p2 = (!col_reg_169.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(col_reg_169.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void call_Loop_LB2D_buf_p::thread_col_cast_fu_220_p1() {
    col_cast_fu_220_p1 = esl_zext<64,11>(col_reg_169.read());
}

void call_Loop_LB2D_buf_p::thread_icmp1_fu_238_p2() {
    icmp1_fu_238_p2 = (!tmp_7_fu_228_p4.read().is_01() || !ap_const_lv63_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_228_p4.read() != ap_const_lv63_0);
}

void call_Loop_LB2D_buf_p::thread_icmp_fu_202_p2() {
    icmp_fu_202_p2 = (!tmp_5_fu_192_p4.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_192_p4.read() == ap_const_lv10_0);
}

void call_Loop_LB2D_buf_p::thread_in_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_3_reg_304.read(), ap_const_lv1_0))) {
        in_stream_V_value_V_blk_n = in_stream_V_value_V_empty_n.read();
    } else {
        in_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void call_Loop_LB2D_buf_p::thread_in_stream_V_value_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_3_reg_304.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        in_stream_V_value_V_read = ap_const_logic_1;
    } else {
        in_stream_V_value_V_read = ap_const_logic_0;
    }
}

void call_Loop_LB2D_buf_p::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_fu_180_p2.read(), ap_const_lv1_1))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void call_Loop_LB2D_buf_p::thread_p_Val2_14_0_phi_fu_265_p3() {
    p_Val2_14_0_phi_fu_265_p3 = (!tmp_8_reg_350.read()[0].is_01())? sc_lv<32>(): ((tmp_8_reg_350.read()[0].to_bool())? buffer_1_value_V_lo_reg_356.read(): buffer_0_value_V_lo_reg_362.read());
}

void call_Loop_LB2D_buf_p::thread_p_Val2_14_1_phi_fu_270_p3() {
    p_Val2_14_1_phi_fu_270_p3 = (!tmp_8_reg_350.read()[0].is_01())? sc_lv<32>(): ((tmp_8_reg_350.read()[0].to_bool())? buffer_0_value_V_lo_reg_362.read(): buffer_1_value_V_lo_reg_356.read());
}

void call_Loop_LB2D_buf_p::thread_p_write_idx_1_1_fu_250_p3() {
    p_write_idx_1_1_fu_250_p3 = (!icmp1_reg_313.read()[0].is_01())? sc_lv<64>(): ((icmp1_reg_313.read()[0].to_bool())? write_idx_1_3_fu_244_p2.read(): write_idx_1_1_reg_158.read());
}

void call_Loop_LB2D_buf_p::thread_real_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, real_start_status_reg.read())) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void call_Loop_LB2D_buf_p::thread_row_1_fu_186_p2() {
    row_1_fu_186_p2 = (!row_reg_147.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(row_reg_147.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void call_Loop_LB2D_buf_p::thread_slice_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_300.read()))) {
        slice_stream_V_value_V_blk_n = slice_stream_V_value_V_full_n.read();
    } else {
        slice_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void call_Loop_LB2D_buf_p::thread_slice_stream_V_value_V_din() {
    slice_stream_V_value_V_din = esl_concat<64,32>(esl_concat<32,32>(tmp_value_V_4_reg_343.read(), p_Val2_14_1_phi_fu_270_p3.read()), p_Val2_14_0_phi_fu_265_p3.read());
}

void call_Loop_LB2D_buf_p::thread_slice_stream_V_value_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_300.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        slice_stream_V_value_V_write = ap_const_logic_1;
    } else {
        slice_stream_V_value_V_write = ap_const_logic_0;
    }
}

void call_Loop_LB2D_buf_p::thread_start_out() {
    start_out = real_start.read();
}

void call_Loop_LB2D_buf_p::thread_start_write() {
    start_write = (ap_start.read() & start_control_reg.read());
}

void call_Loop_LB2D_buf_p::thread_tmp_3_fu_208_p2() {
    tmp_3_fu_208_p2 = (!col_reg_169.read().is_01() || !ap_const_lv11_780.is_01())? sc_lv<1>(): sc_lv<1>(col_reg_169.read() == ap_const_lv11_780);
}

void call_Loop_LB2D_buf_p::thread_tmp_5_fu_192_p4() {
    tmp_5_fu_192_p4 = row_reg_147.read().range(10, 1);
}

void call_Loop_LB2D_buf_p::thread_tmp_7_fu_228_p4() {
    tmp_7_fu_228_p4 = write_idx_1_1_phi_fu_161_p4.read().range(63, 1);
}

void call_Loop_LB2D_buf_p::thread_tmp_8_fu_257_p1() {
    tmp_8_fu_257_p1 = p_write_idx_1_1_fu_250_p3.read().range(1-1, 0);
}

void call_Loop_LB2D_buf_p::thread_tmp_9_fu_261_p1() {
    tmp_9_fu_261_p1 = p_write_idx_1_1_fu_250_p3.read().range(1-1, 0);
}

void call_Loop_LB2D_buf_p::thread_tmp_fu_180_p2() {
    tmp_fu_180_p2 = (!row_reg_147.read().is_01() || !ap_const_lv11_438.is_01())? sc_lv<1>(): sc_lv<1>(row_reg_147.read() == ap_const_lv11_438);
}

void call_Loop_LB2D_buf_p::thread_write_idx_1_1_phi_fu_161_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_3_reg_304.read(), ap_const_lv1_0))) {
        write_idx_1_1_phi_fu_161_p4 = p_write_idx_1_1_fu_250_p3.read();
    } else {
        write_idx_1_1_phi_fu_161_p4 = write_idx_1_1_reg_158.read();
    }
}

void call_Loop_LB2D_buf_p::thread_write_idx_1_2_fu_285_p2() {
    write_idx_1_2_fu_285_p2 = (!write_idx_1_1_reg_158.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(write_idx_1_1_reg_158.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void call_Loop_LB2D_buf_p::thread_write_idx_1_3_fu_244_p2() {
    write_idx_1_3_fu_244_p2 = (!write_idx_1_1_reg_158.read().is_01() || !ap_const_lv64_FFFFFFFFFFFFFFFE.is_01())? sc_lv<64>(): (sc_biguint<64>(write_idx_1_1_reg_158.read()) + sc_bigint<64>(ap_const_lv64_FFFFFFFFFFFFFFFE));
}

void call_Loop_LB2D_buf_p::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_fu_180_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_3_fu_208_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(tmp_3_fu_208_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

